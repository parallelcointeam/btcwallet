package jdb

import (
	"fmt"

	scribble "github.com/nanobox-io/golang-scribble"
)

var VueLibs map[string][]byte

// var VuePages map[string]string
var VueIcons map[string]string
var VueImgs map[string]string

func init() {
	dir := "./jdb/"
	db, err := scribble.New(dir, nil)
	if err != nil {
		fmt.Println("Error", err)
	}
	// db.Write("data", "vlibs", VLB)
	// db.Write("data", "vpages", VPG)
	db.Write("data", "vicons", VIC)
	db.Write("data", "vimgs", VIM)

	if err := db.Read("data", "vlibs", &VueLibs); err != nil {
		fmt.Println("Error", err)
	}
	// if err := db.Read("data", "vpages", &VuePages); err != nil {
	// 	fmt.Println("Error", err)
	// }
	if err := db.Read("data", "vicons", &VueIcons); err != nil {
		fmt.Println("Error", err)
	}
	if err := db.Read("data", "vimgs", &VueImgs); err != nil {
		fmt.Println("Error", err)
	}
	// if err := db.Read("data", "vicons", &VueIcons); err != nil {
	// 	fmt.Println("Error", err)
	// }

	// if err := db.Read("vicons", "vicons", &VIcons); err != nil {
	// 	fmt.Println("Error", err)
	// }
	// if err := db.Read("data", "settings", &Settings); err != nil {
	// 	fmt.Println("Error", err)
	// }

}
